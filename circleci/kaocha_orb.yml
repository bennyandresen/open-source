version: 2.1

description: Run tests with Kaocha and Clojure CLI tools

commands:
  execute:
    description: |
      Run Kaocha with Clojure CLI
    parameters:
      args:
        description: Extra command line arguments
        type: string
        default: ""
      aliases:
        description: |
          deps.edn aliases to use. Proceed each alias with a ":", don't add
          spaces, e.g. ":test:dev"
        type: string
        default: ":test"
      clojure_version:
        description: Clojure version to use (full Maven version)
        type: string
        default: 1.10.3

    steps:
      - run: mkdir -p test-results/kaocha
      - run: |
          clojure -A<< parameters.aliases >> \
            -Sdeps '{:deps {org.clojure/clojure {:mvn/version "<< parameters.clojure_version >>"}
                            lambdaisland/kaocha-junit-xml {:mvn/version "RELEASE"}
                            lambdaisland/kaocha-cloverage {:mvn/version "RELEASE"}}}' \
            -m kaocha.runner \
            --plugin profiling \
            --plugin capture-output \
            --plugin junit-xml \
            --plugin kaocha.plugin.alpha/info \
            --print-env \
            --junit-xml-file test-results/kaocha/$(date +"%s").xml \
            << parameters.args >>
      - store_artifacts:
          path: test-results
      - store_test_results:
          path: test-results

  upload_codecov:
    description: |
      Upload coverage results to Codecov.io.

      Make sure you run Kaocha with --plugin cloverage --codecov. For non-free
      repos make sure to set your CODECOV_TOKEN.
    parameters:
      conf:
        description: Used to specify the location of the .codecov.yml config file
        type: string
        default: ""
      file:
        description: Path to the code coverage data file to upload.
        type: string
        default: "target/coverage/codecov.json"
      flags:
        description: Flag the upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
        type: string
        default: ""
      token:
        description: Set the private repository token (defaults to environment variable $CODECOV_TOKEN)
        type: string
        default: ""
      upload_name:
        description: Custom defined name of the upload. Visible in Codecov UI
        type: string
        default: ${CIRCLE_BUILD_NUM}
    steps:
      - run:
          name: Upload Coverage Results to Codecov.io
          command: |
            for COVERAGE_FILE in `ls << parameters.file >>`; do
            echo Uploading $COVERAGE_FILE to Codecov.io
            {
              if [[ ! -z "<< parameters.flags >>" ]]; then
                echo -F << parameters.flags >>
              fi

              if [[ ! -z "<< parameters.conf >>" ]]; then
                echo -y << parameters.token >>
              elif [[ ! -z "${CODECOV_TOKEN}" ]]; then
                echo -y ${CODECOV_TOKEN}
              fi

              if [[ ! -z "<< parameters.token >>" ]]; then
                echo -t << parameters.token >>
              fi
            } | xargs bash <(curl -s https://codecov.io/bash) -n << parameters.upload_name >> -f $COVERAGE_FILE
            done
